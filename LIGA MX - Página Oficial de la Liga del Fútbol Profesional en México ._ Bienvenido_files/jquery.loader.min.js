if (navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1) {
// anulamos el loadershow cuando se use SAFARI
} else{
// alert('funciona loader');
! function(a) {
    "use strict";
    var e = function(a, e) {
            for (var r in e) a = a.replace(new RegExp("{" + r + "}", "g"), e[r]);
            return a
        },
        r = function() {
            var r = {
                    className: "loader",
                    tpl: '<div class="{className} hide"><div class="{className}-load"></br></br><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><span style="margin-top:45%; font-size:29px; color: white !important; font-weight: 900; ">Cargando...</span></div><div class="{className}-overlay"></div></div>',
                    delay: 200,
                    loader: !0,
                    overlay: !0,
                    onHide: function() {},
                    onShow: function() {}
                },
                n = function(n) {
                    return this.each(function() {
                        r = a.extend({}, r, n);
                        var t, i = a(this);
                        i.append(e(r.tpl, r)), t = a("> ." + r.className, i), r.overlay && t.addClass("overlay"), r.loader && a("." + r.className + "-load", t).on("click", function() {
                            i.loader("hide", r.onHide)
                        })
                    })
                },
                t = function(e) {
                    r = a.extend({}, r, e);
                    var t = this,
                        i = a(t),
                        o = a("> ." + r.className + ":first", i);
                    o.length || (n.call(t, e), o = a("> ." + r.className + ":first", i)), o.fadeIn(r.delay, function() {
                        o.removeClass("hide"), r.onShow(r)
                    })
                },
                i = function(e) {
                    r = a.extend({}, r, {
                        onHide: e
                    });
                    var n = this,
                        t = a(n),
                        i = a("> ." + r.className + ":first", t);
                    i.length && i.fadeOut(r.delay, function() {
                        i.addClass("hide"), r.onHide(r)
                    })
                };
            return {
                init: n,
                show: t,
                hide: i
            }
        };
    a.fn.loader = function(e) {
        a.data(this, "loader") || a.data(this, "loader", new r(this, e));
        var n = a.data(this, "loader");
        return n[e] ? n[e].apply(this, Array.prototype.slice.call(arguments, 1)) : "object" != typeof e && e ? void a.error('Method "' + arguments[0] + '" does not exist in $.loader plugin!') : n.init.apply(this, arguments)
    }
}(jQuery);
}